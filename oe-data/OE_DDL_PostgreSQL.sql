SHOW SEARCH_PATH;

-- DROP TABLES
DROP TABLE IF EXISTS ORDER_ITEMS CASCADE;
DROP TABLE IF EXISTS ORDERS CASCADE;
DROP TABLE IF EXISTS PRODUCT_DESCRIPTIONS CASCADE;
DROP TABLE IF EXISTS INVENTORIES CASCADE;
DROP TABLE IF EXISTS WAREHOUSES CASCADE;
DROP TABLE IF EXISTS CUSTOMERS CASCADE;
DROP TABLE IF EXISTS PRODUCT_INFORMATION CASCADE;
DROP TABLE IF EXISTS CATEGORIES CASCADE;

-- DROP TYPES
DROP TYPE IF EXISTS CUST_ADDRESS_TYP CASCADE;


-- CATEGORIES
CREATE TABLE IF NOT EXISTS CATEGORIES (
    CATEGORY_NAME VARCHAR(50),
    CATEGORY_DESCRIPTION VARCHAR(1000),
    CATEGORY_ID NUMERIC(2) NOT NULL
);
ALTER TABLE CATEGORIES ADD CONSTRAINT CATEGORIES_PK PRIMARY KEY (CATEGORY_ID);


-- PRODUCT_INFORMATION
CREATE TABLE IF NOT EXISTS PRODUCT_INFORMATION (
    PRODUCT_ID NUMERIC(6) NOT NULL,
    PRODUCT_NAME VARCHAR(50) NOT NULL,
    PRODUCT_DESCRIPTION VARCHAR(2000),
    CATEGORY_ID NUMERIC(2),
    WEIGHT_CLASS NUMERIC(1),
    WARRANTY_PERIOD SMALLINT DEFAULT 0,    
    SUPPLIER_ID NUMERIC(6),
    PRODUCT_STATUS VARCHAR(20),
    LIST_PRICE NUMERIC(8,2),
    MIN_PRICE NUMERIC(8,2),
    CATALOG_URL VARCHAR(50),
    CONSTRAINT PROD_INF_WAR_PER_CK CHECK (WARRANTY_PERIOD >= 0),
    CONSTRAINT PROD_INF_MIN_P_CK CHECK (MIN_PRICE >= 0.0 AND LIST_PRICE >= 0.0)
);
ALTER TABLE PRODUCT_INFORMATION ADD CONSTRAINT PRODUCT_INFORMATION_PK PRIMARY KEY (PRODUCT_ID);
COMMENT ON TABLE PRODUCT_INFORMATION IS 'Non-industry-specific data in various categories.';
COMMENT ON COLUMN PRODUCT_INFORMATION.PRODUCT_ID IS 'Primary key column.';
COMMENT ON COLUMN PRODUCT_INFORMATION.PRODUCT_DESCRIPTION IS 'Primary language description corresponding to translated_description in oe.product_descriptions, added to provide non-NLS text columns for OC views to accss.';
COMMENT ON COLUMN PRODUCT_INFORMATION.CATEGORY_ID IS 'Low cardinality column, can be used for bitmap index. Schema SH uses it as foreign key';
COMMENT ON COLUMN PRODUCT_INFORMATION.WEIGHT_CLASS IS 'Low cardinality column, can be used for bitmap index.';
COMMENT ON COLUMN PRODUCT_INFORMATION.WARRANTY_PERIOD IS 'INTERVAL YEAER TO MONTH column, low cardinality, can be used for bitmap index.';
COMMENT ON COLUMN PRODUCT_INFORMATION.SUPPLIER_ID IS 'Offers possibility of extensions outside Common Schema.';
COMMENT ON COLUMN PRODUCT_INFORMATION.PRODUCT_STATUS IS 'Check constraint. Appropriate for complex rules, such as "All products in status PRODUCTION must have at least one inventory entry." Also appropriate for a trigger auditing status change.';


-- CUSTOMERS
CREATE TYPE CUST_ADDRESS_TYP AS (
    STREET_ADDRESS VARCHAR(40),
    POSTAL_CODE VARCHAR(10),
    CITY VARCHAR(30),    
    STATE_PROVINCE VARCHAR(10),
    COUNTRY_ID CHAR(2)    
);

CREATE TABLE IF NOT EXISTS CUSTOMERS (
    CUSTOMER_ID NUMERIC(6) NOT NULL,
    CUST_FIRST_NAME VARCHAR(20) NOT NULL,
    CUST_LAST_NAME VARCHAR(20) NOT NULL,
    CUST_ADDRESS CUST_ADDRESS_TYP,     
    PHONE_NUMBERS TEXT[],
    NLS_LANGUAGE VARCHAR(3),
    NLS_TERRITORY VARCHAR(30),
    CREDIT_LIMIT NUMERIC(9,2),
    CUST_EMAIL VARCHAR(30),
    ACCOUNT_MGR_ID SMALLINT,
    DATE_OF_BIRTH DATE,
    MARITAL_STATUS VARCHAR(20),
    GENDER VARCHAR(1),
    INCOME_LEVEL VARCHAR(20),
    CONSTRAINT CUST_CREDIT_LIMIT_MAX CHECK (CREDIT_LIMIT <= 5000)
);
ALTER TABLE CUSTOMERS ADD CONSTRAINT CUSTOMERS_PK PRIMARY KEY (CUSTOMER_ID);
COMMENT ON TABLE CUSTOMERS IS 'Contains customers data either entered by an employee or by the customer him/herself over the Web.';
COMMENT ON COLUMN CUSTOMERS.CUST_ADDRESS IS 'Object column of type address_typ.';
COMMENT ON COLUMN CUSTOMERS.PHONE_NUMBERS IS 'Varray column of type phone_list_typ';
COMMENT ON COLUMN CUSTOMERS.CUST_FIRST_NAME IS 'NOT NULL constraint.';
COMMENT ON COLUMN CUSTOMERS.CUST_LAST_NAME IS 'NOT NULL constraint.';
COMMENT ON COLUMN CUSTOMERS.CREDIT_LIMIT IS 'Check constraint.';
COMMENT ON COLUMN CUSTOMERS.CUSTOMER_ID IS 'Primary key column.';
COMMENT ON COLUMN CUSTOMERS.ACCOUNT_MGR_ID IS 'References hr.employees.employee_id.';
COMMENT ON COLUMN CUSTOMERS.DATE_OF_BIRTH IS '';
COMMENT ON COLUMN CUSTOMERS.MARITAL_STATUS IS '';
COMMENT ON COLUMN CUSTOMERS.GENDER IS '';
COMMENT ON COLUMN CUSTOMERS.INCOME_LEVEL IS '';


-- WAREHOUSES
CREATE TABLE IF NOT EXISTS WAREHOUSES (
    WAREHOUSE_ID NUMERIC(3) NOT NULL,
    WAREHOUSE_SPEC XML,
    WAREHOUSE_NAME VARCHAR(35) NOT NULL,
    LOCATION_ID SMALLINT NOT NULL
);
ALTER TABLE WAREHOUSES ADD CONSTRAINT WAREHOUSES_PK PRIMARY KEY (WAREHOUSE_ID);
COMMENT ON TABLE WAREHOUSES IS 'Warehouse data unspecific to any industry.';
COMMENT ON COLUMN WAREHOUSES.WAREHOUSE_ID IS 'Primary key column.';
COMMENT ON COLUMN WAREHOUSES.LOCATION_ID IS 'Primary key column, references hr.locations.location_id.';
COMMENT ON COLUMN WAREHOUSES.WAREHOUSE_NAME IS '';
COMMENT ON COLUMN WAREHOUSES.WAREHOUSE_SPEC IS '';


-- INVENTORIES
CREATE TABLE IF NOT EXISTS INVENTORIES (
    PRODUCT_ID NUMERIC(6) NOT NULL,
    WAREHOUSE_ID NUMERIC(3) NOT NULL,
    QUANTITY_ON_HAND NUMERIC(8) NOT NULL
);
ALTER TABLE INVENTORIES ADD CONSTRAINT INVENTORY_PK PRIMARY KEY (PRODUCT_ID,WAREHOUSE_ID);
COMMENT ON TABLE INVENTORIES IS 'Tracks availability of products by product_it and warehouse_id.';
COMMENT ON COLUMN INVENTORIES.PRODUCT_ID IS 'Part of concatenated primary key, references product_information.product_id.';
COMMENT ON COLUMN INVENTORIES.WAREHOUSE_ID IS 'Part of concatenated primary key, references warehouses.warehouse_id.';
COMMENT ON COLUMN INVENTORIES.QUANTITY_ON_HAND IS '';


-- PRODUCT_DESCRIPTIONS
CREATE TABLE IF NOT EXISTS PRODUCT_DESCRIPTIONS (
    PRODUCT_ID NUMERIC(6) NOT NULL,
    LANGUAGE_ID VARCHAR(3) NOT NULL,
    TRANSLATED_NAME VARCHAR(50) NOT NULL,
    TRANSLATED_DESCRIPTION VARCHAR(2000) NOT NULL
);
ALTER TABLE PRODUCT_DESCRIPTIONS ADD CONSTRAINT PRODUCT_DESCRIPTIONS_PK PRIMARY KEY (PRODUCT_ID, LANGUAGE_ID);


-- ORDERS
CREATE TABLE IF NOT EXISTS ORDERS ( 
    ORDER_ID NUMERIC(12) NOT NULL,    
    ORDER_DATE DATE NOT NULL,
    ORDER_MODE VARCHAR(8),
    CUSTOMER_ID NUMERIC(6) NOT NULL,
    ORDER_STATUS NUMERIC(2),
    ORDER_TOTAL NUMERIC(8,2),
    SALES_REP_ID SMALLINT,
    PROMOTION_ID NUMERIC(6)
);
ALTER TABLE ORDERS ADD CONSTRAINT ORDER_PK PRIMARY KEY (ORDER_ID);
COMMENT ON TABLE ORDERS IS 'Contains orders entered by a salesperson as well as over the Web.';
COMMENT ON COLUMN ORDERS.ORDER_DATE IS 'TIMESTAMP WITH LOCAL TIME ZONE column, NOT NULL constraint.';
COMMENT ON COLUMN ORDERS.ORDER_ID IS 'PRIMARY KEY column.';
COMMENT ON COLUMN ORDERS.SALES_REP_ID IS 'References hr.employees.employee_id.';
COMMENT ON COLUMN ORDERS.PROMOTION_ID IS 'Sales promotion ID. Used in SH schema';
COMMENT ON COLUMN ORDERS.ORDER_MODE IS 'CHECK constraint.';
COMMENT ON COLUMN ORDERS.ORDER_TOTAL IS 'CHECK constraint.';
COMMENT ON COLUMN ORDERS.ORDER_STATUS IS '0: Not fully entered, 1: Entered, 2: Canceled - bad credit, - 3: Canceled - by customer, 4: Shipped - whole order, - 5: Shipped - replacement items, 6: Shipped - backlog on items, - 7: Shipped - special delivery, 8: Shipped - billed, 9: Shipped - payment plan,- 10: Shipped - paid'; 


-- ORDER_ITEMS
CREATE TABLE IF NOT EXISTS ORDER_ITEMS (
    ORDER_ID NUMERIC(12) NOT NULL,
    LINE_ITEM_ID NUMERIC(3) NOT NULL,
    PRODUCT_ID NUMERIC(6) NOT NULL,
    UNIT_PRICE NUMERIC(8,2),
    QUANTITY NUMERIC(8)
);
ALTER TABLE ORDER_ITEMS ADD CONSTRAINT ORDER_ITEMS_PK PRIMARY KEY (ORDER_ID, LINE_ITEM_ID);
COMMENT ON TABLE ORDER_ITEMS IS 'Example of many-to-many resolution.';
COMMENT ON COLUMN ORDER_ITEMS.order_id IS 'Part of concatenated primary key, references orders.order_id.';
COMMENT ON COLUMN ORDER_ITEMS.product_id IS 'References product_information.product_id.';
COMMENT ON COLUMN ORDER_ITEMS.line_item_id IS 'Part of concatenated primary key.';


-- FOREIGN KEY
ALTER TABLE PRODUCT_INFORMATION ADD CONSTRAINT PRODUCT_INFO_CATEGORY_FK FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORIES (CATEGORY_ID) ON DELETE SET NULL ON UPDATE CASCADE;
-- ALTER TABLE CUSTOMERS ADD CONSTRAINT CUS_AC_MGR_FK FOREIGN KEY (ACCOUNT_MGR_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID) ON DELETE SET NULL ON UPDATE CASCADE;
-- ALTER TABLE WAREHOUSES ADD CONSTRAINT WAR_LOC_ID_FK FOREIGN KEY (LOCATION_ID) REFERENCES LOCATIONS (LOCATION_ID) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE INVENTORIES ADD CONSTRAINT INVENTORIES_PRODUCT_ID_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT_INFORMATION (PRODUCT_ID) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE INVENTORIES ADD CONSTRAINT INVENTORIES_WAREHOUSES_FK FOREIGN KEY (WAREHOUSE_ID) REFERENCES WAREHOUSES (WAREHOUSE_ID) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE PRODUCT_DESCRIPTIONS ADD CONSTRAINT PROD_DESC_ID_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT_INFORMATION (PRODUCT_ID) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE ORDERS ADD CONSTRAINT ORDERS_CUSTOMER_ID_FK FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS (CUSTOMER_ID) ON DELETE SET NULL;
-- ALTER TABLE ORDERS ADD CONSTRAINT ORDERS_SALES_REP_ID_FK FOREIGN KEY (SALES_REP_ID) REFERENCES EMPLOYEES (EMPLOYEE_ID) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE ORDER_ITEMS ADD CONSTRAINT ORDER_ITEMS_PRODUCT_ID_FK FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT_INFORMATION (PRODUCT_ID) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE ORDER_ITEMS ADD CONSTRAINT ORDER_ITEMS_ORDER_ID_FK FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ORDER_ID) ON DELETE RESTRICT ON UPDATE CASCADE;
